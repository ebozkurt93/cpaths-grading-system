# import * from './generated/prisma.graphql'

# this is needed for upload to work
scalar Upload

type SuccessMessage {
  message: String
}

type File {
  id: ID!
  path: String!
  filename: String!
  mimetype: String!
  encoding: String!
}

type Mutation {
  # signup(email: String!, password: String!, name: String!): User!
  # login(email: String!, password: String!): User!
  # logout: SuccessMessage
  # requestPasswordReset(email: String!): SuccessMessage
  # resetPassword(
  #   resetToken: String!
  #   password: String!
  #   confirmPassword: String!
  # ): User!
  # registerApplication(otherinfo1: String!, gpa: Float!): SuccessMessage
  registerApplication(
    email: String!
    name: String!
    lastname: String!
    university: String!
    universityYear: String!
    universityDept: String!
    gpa: Float!
    cv: Upload!
    transcript: Upload!
    longQuestion1: String!
    longQuestion2: String!
    longQuestion3: String!
    longQuestion4: String!
    aboutUs: String!
  ): SuccessMessage
  logout: SuccessMessage
  editYourPermissions(permissions: [Permission]): User
  submitFormGrade(
    initialFormId: ID!
    score1: Int!
    score2: Int!
    score3: Int!
    boolean: Boolean!
    notes: String
  ): SuccessMessage
  updateInvalidState(value: String!): SuccessMessage
}

type Query {
  forms: [InitialForm]!
  form(id: ID): InitialForm
  me: User
  formGrades: [FormGrade]!
  formGradeForInitialForm(initialFormId: ID): FormGrade
  #   applications: [Application]!
}

# type User {
#   id: ID!
#   name: String!
#   email: String!
#   permissions: [Permission!]!
# }
