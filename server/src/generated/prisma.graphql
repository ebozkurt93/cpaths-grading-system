type AggregateFormGrade {
  count: Int!
}

type AggregateInitialForm {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """
  The number of nodes that have been affected by the Batch operation.
  """
  count: Long!
}

type FormGrade implements Node {
  id: ID!
  jury: User!
  form: InitialForm!
  score1: Int!
  score2: Int!
  score3: Int!
  boolean: Boolean!
  notes: String
}

"""
A connection to a list of items.
"""
type FormGradeConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [FormGradeEdge]!
  aggregate: AggregateFormGrade!
}

input FormGradeCreateInput {
  score1: Int!
  score2: Int!
  score3: Int!
  boolean: Boolean!
  notes: String
  jury: UserCreateOneInput!
  form: InitialFormCreateOneInput!
}

"""
An edge in a connection.
"""
type FormGradeEdge {
  """
  The item at the end of the edge.
  """
  node: FormGrade!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum FormGradeOrderByInput {
  id_ASC
  id_DESC
  score1_ASC
  score1_DESC
  score2_ASC
  score2_DESC
  score3_ASC
  score3_DESC
  boolean_ASC
  boolean_DESC
  notes_ASC
  notes_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type FormGradePreviousValues {
  id: ID!
  score1: Int!
  score2: Int!
  score3: Int!
  boolean: Boolean!
  notes: String
}

type FormGradeSubscriptionPayload {
  mutation: MutationType!
  node: FormGrade
  updatedFields: [String!]
  previousValues: FormGradePreviousValues
}

input FormGradeSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [FormGradeSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [FormGradeSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [FormGradeSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: FormGradeWhereInput
}

input FormGradeUpdateInput {
  score1: Int
  score2: Int
  score3: Int
  boolean: Boolean
  notes: String
  jury: UserUpdateOneRequiredInput
  form: InitialFormUpdateOneRequiredInput
}

input FormGradeUpdateManyMutationInput {
  score1: Int
  score2: Int
  score3: Int
  boolean: Boolean
  notes: String
}

input FormGradeWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [FormGradeWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [FormGradeWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [FormGradeWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  score1: Int

  """
  All values that are not equal to given value.
  """
  score1_not: Int

  """
  All values that are contained in given list.
  """
  score1_in: [Int!]

  """
  All values that are not contained in given list.
  """
  score1_not_in: [Int!]

  """
  All values less than the given value.
  """
  score1_lt: Int

  """
  All values less than or equal the given value.
  """
  score1_lte: Int

  """
  All values greater than the given value.
  """
  score1_gt: Int

  """
  All values greater than or equal the given value.
  """
  score1_gte: Int
  score2: Int

  """
  All values that are not equal to given value.
  """
  score2_not: Int

  """
  All values that are contained in given list.
  """
  score2_in: [Int!]

  """
  All values that are not contained in given list.
  """
  score2_not_in: [Int!]

  """
  All values less than the given value.
  """
  score2_lt: Int

  """
  All values less than or equal the given value.
  """
  score2_lte: Int

  """
  All values greater than the given value.
  """
  score2_gt: Int

  """
  All values greater than or equal the given value.
  """
  score2_gte: Int
  score3: Int

  """
  All values that are not equal to given value.
  """
  score3_not: Int

  """
  All values that are contained in given list.
  """
  score3_in: [Int!]

  """
  All values that are not contained in given list.
  """
  score3_not_in: [Int!]

  """
  All values less than the given value.
  """
  score3_lt: Int

  """
  All values less than or equal the given value.
  """
  score3_lte: Int

  """
  All values greater than the given value.
  """
  score3_gt: Int

  """
  All values greater than or equal the given value.
  """
  score3_gte: Int
  boolean: Boolean

  """
  All values that are not equal to given value.
  """
  boolean_not: Boolean
  notes: String

  """
  All values that are not equal to given value.
  """
  notes_not: String

  """
  All values that are contained in given list.
  """
  notes_in: [String!]

  """
  All values that are not contained in given list.
  """
  notes_not_in: [String!]

  """
  All values less than the given value.
  """
  notes_lt: String

  """
  All values less than or equal the given value.
  """
  notes_lte: String

  """
  All values greater than the given value.
  """
  notes_gt: String

  """
  All values greater than or equal the given value.
  """
  notes_gte: String

  """
  All values containing the given string.
  """
  notes_contains: String

  """
  All values not containing the given string.
  """
  notes_not_contains: String

  """
  All values starting with the given string.
  """
  notes_starts_with: String

  """
  All values not starting with the given string.
  """
  notes_not_starts_with: String

  """
  All values ending with the given string.
  """
  notes_ends_with: String

  """
  All values not ending with the given string.
  """
  notes_not_ends_with: String
  jury: UserWhereInput
  form: InitialFormWhereInput
}

input FormGradeWhereUniqueInput {
  id: ID
}

type InitialForm implements Node {
  id: ID!
  email: String!
  name: String!
  lastname: String!
  university: String!
  universityYear: String!
  universityDept: String!
  gpa: Float!
  cv: String!
  cvAnon: String!
  transcript: String!
  transcriptAnon: String!
  internshipCountry: String!
  internshipType: String!
  companyName: String!
  internshipPeriod: String!
  internshipPosition: String!
  acceptanceLetter: String!
  acceptanceEmail: String!
  economicSupport: String!
  longQuestion1: String!
  longQuestion2: String!
  longQuestion3: String!
  ourPrograms: String!
  aboutUs: String!
  invalid: Boolean!
  formEditToken: String
  formEditTokenExpiry: Float
  notes: String
}

"""
A connection to a list of items.
"""
type InitialFormConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [InitialFormEdge]!
  aggregate: AggregateInitialForm!
}

input InitialFormCreateInput {
  email: String!
  name: String!
  lastname: String!
  university: String!
  universityYear: String!
  universityDept: String!
  gpa: Float!
  cv: String!
  cvAnon: String!
  transcript: String!
  transcriptAnon: String!
  internshipCountry: String!
  internshipType: String!
  companyName: String!
  internshipPeriod: String!
  internshipPosition: String!
  acceptanceLetter: String!
  acceptanceEmail: String!
  economicSupport: String!
  longQuestion1: String!
  longQuestion2: String!
  longQuestion3: String!
  ourPrograms: String!
  aboutUs: String!
  invalid: Boolean!
  formEditToken: String
  formEditTokenExpiry: Float
  notes: String
}

input InitialFormCreateOneInput {
  create: InitialFormCreateInput
  connect: InitialFormWhereUniqueInput
}

"""
An edge in a connection.
"""
type InitialFormEdge {
  """
  The item at the end of the edge.
  """
  node: InitialForm!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum InitialFormOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  name_ASC
  name_DESC
  lastname_ASC
  lastname_DESC
  university_ASC
  university_DESC
  universityYear_ASC
  universityYear_DESC
  universityDept_ASC
  universityDept_DESC
  gpa_ASC
  gpa_DESC
  cv_ASC
  cv_DESC
  cvAnon_ASC
  cvAnon_DESC
  transcript_ASC
  transcript_DESC
  transcriptAnon_ASC
  transcriptAnon_DESC
  internshipCountry_ASC
  internshipCountry_DESC
  internshipType_ASC
  internshipType_DESC
  companyName_ASC
  companyName_DESC
  internshipPeriod_ASC
  internshipPeriod_DESC
  internshipPosition_ASC
  internshipPosition_DESC
  acceptanceLetter_ASC
  acceptanceLetter_DESC
  acceptanceEmail_ASC
  acceptanceEmail_DESC
  economicSupport_ASC
  economicSupport_DESC
  longQuestion1_ASC
  longQuestion1_DESC
  longQuestion2_ASC
  longQuestion2_DESC
  longQuestion3_ASC
  longQuestion3_DESC
  ourPrograms_ASC
  ourPrograms_DESC
  aboutUs_ASC
  aboutUs_DESC
  invalid_ASC
  invalid_DESC
  formEditToken_ASC
  formEditToken_DESC
  formEditTokenExpiry_ASC
  formEditTokenExpiry_DESC
  notes_ASC
  notes_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type InitialFormPreviousValues {
  id: ID!
  email: String!
  name: String!
  lastname: String!
  university: String!
  universityYear: String!
  universityDept: String!
  gpa: Float!
  cv: String!
  cvAnon: String!
  transcript: String!
  transcriptAnon: String!
  internshipCountry: String!
  internshipType: String!
  companyName: String!
  internshipPeriod: String!
  internshipPosition: String!
  acceptanceLetter: String!
  acceptanceEmail: String!
  economicSupport: String!
  longQuestion1: String!
  longQuestion2: String!
  longQuestion3: String!
  ourPrograms: String!
  aboutUs: String!
  invalid: Boolean!
  formEditToken: String
  formEditTokenExpiry: Float
  notes: String
}

type InitialFormSubscriptionPayload {
  mutation: MutationType!
  node: InitialForm
  updatedFields: [String!]
  previousValues: InitialFormPreviousValues
}

input InitialFormSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [InitialFormSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [InitialFormSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [InitialFormSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: InitialFormWhereInput
}

input InitialFormUpdateDataInput {
  email: String
  name: String
  lastname: String
  university: String
  universityYear: String
  universityDept: String
  gpa: Float
  cv: String
  cvAnon: String
  transcript: String
  transcriptAnon: String
  internshipCountry: String
  internshipType: String
  companyName: String
  internshipPeriod: String
  internshipPosition: String
  acceptanceLetter: String
  acceptanceEmail: String
  economicSupport: String
  longQuestion1: String
  longQuestion2: String
  longQuestion3: String
  ourPrograms: String
  aboutUs: String
  invalid: Boolean
  formEditToken: String
  formEditTokenExpiry: Float
  notes: String
}

input InitialFormUpdateInput {
  email: String
  name: String
  lastname: String
  university: String
  universityYear: String
  universityDept: String
  gpa: Float
  cv: String
  cvAnon: String
  transcript: String
  transcriptAnon: String
  internshipCountry: String
  internshipType: String
  companyName: String
  internshipPeriod: String
  internshipPosition: String
  acceptanceLetter: String
  acceptanceEmail: String
  economicSupport: String
  longQuestion1: String
  longQuestion2: String
  longQuestion3: String
  ourPrograms: String
  aboutUs: String
  invalid: Boolean
  formEditToken: String
  formEditTokenExpiry: Float
  notes: String
}

input InitialFormUpdateManyMutationInput {
  email: String
  name: String
  lastname: String
  university: String
  universityYear: String
  universityDept: String
  gpa: Float
  cv: String
  cvAnon: String
  transcript: String
  transcriptAnon: String
  internshipCountry: String
  internshipType: String
  companyName: String
  internshipPeriod: String
  internshipPosition: String
  acceptanceLetter: String
  acceptanceEmail: String
  economicSupport: String
  longQuestion1: String
  longQuestion2: String
  longQuestion3: String
  ourPrograms: String
  aboutUs: String
  invalid: Boolean
  formEditToken: String
  formEditTokenExpiry: Float
  notes: String
}

input InitialFormUpdateOneRequiredInput {
  create: InitialFormCreateInput
  connect: InitialFormWhereUniqueInput
  update: InitialFormUpdateDataInput
  upsert: InitialFormUpsertNestedInput
}

input InitialFormUpsertNestedInput {
  update: InitialFormUpdateDataInput!
  create: InitialFormCreateInput!
}

input InitialFormWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [InitialFormWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [InitialFormWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [InitialFormWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  email: String

  """
  All values that are not equal to given value.
  """
  email_not: String

  """
  All values that are contained in given list.
  """
  email_in: [String!]

  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]

  """
  All values less than the given value.
  """
  email_lt: String

  """
  All values less than or equal the given value.
  """
  email_lte: String

  """
  All values greater than the given value.
  """
  email_gt: String

  """
  All values greater than or equal the given value.
  """
  email_gte: String

  """
  All values containing the given string.
  """
  email_contains: String

  """
  All values not containing the given string.
  """
  email_not_contains: String

  """
  All values starting with the given string.
  """
  email_starts_with: String

  """
  All values not starting with the given string.
  """
  email_not_starts_with: String

  """
  All values ending with the given string.
  """
  email_ends_with: String

  """
  All values not ending with the given string.
  """
  email_not_ends_with: String
  name: String

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values less than the given value.
  """
  name_lt: String

  """
  All values less than or equal the given value.
  """
  name_lte: String

  """
  All values greater than the given value.
  """
  name_gt: String

  """
  All values greater than or equal the given value.
  """
  name_gte: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  lastname: String

  """
  All values that are not equal to given value.
  """
  lastname_not: String

  """
  All values that are contained in given list.
  """
  lastname_in: [String!]

  """
  All values that are not contained in given list.
  """
  lastname_not_in: [String!]

  """
  All values less than the given value.
  """
  lastname_lt: String

  """
  All values less than or equal the given value.
  """
  lastname_lte: String

  """
  All values greater than the given value.
  """
  lastname_gt: String

  """
  All values greater than or equal the given value.
  """
  lastname_gte: String

  """
  All values containing the given string.
  """
  lastname_contains: String

  """
  All values not containing the given string.
  """
  lastname_not_contains: String

  """
  All values starting with the given string.
  """
  lastname_starts_with: String

  """
  All values not starting with the given string.
  """
  lastname_not_starts_with: String

  """
  All values ending with the given string.
  """
  lastname_ends_with: String

  """
  All values not ending with the given string.
  """
  lastname_not_ends_with: String
  university: String

  """
  All values that are not equal to given value.
  """
  university_not: String

  """
  All values that are contained in given list.
  """
  university_in: [String!]

  """
  All values that are not contained in given list.
  """
  university_not_in: [String!]

  """
  All values less than the given value.
  """
  university_lt: String

  """
  All values less than or equal the given value.
  """
  university_lte: String

  """
  All values greater than the given value.
  """
  university_gt: String

  """
  All values greater than or equal the given value.
  """
  university_gte: String

  """
  All values containing the given string.
  """
  university_contains: String

  """
  All values not containing the given string.
  """
  university_not_contains: String

  """
  All values starting with the given string.
  """
  university_starts_with: String

  """
  All values not starting with the given string.
  """
  university_not_starts_with: String

  """
  All values ending with the given string.
  """
  university_ends_with: String

  """
  All values not ending with the given string.
  """
  university_not_ends_with: String
  universityYear: String

  """
  All values that are not equal to given value.
  """
  universityYear_not: String

  """
  All values that are contained in given list.
  """
  universityYear_in: [String!]

  """
  All values that are not contained in given list.
  """
  universityYear_not_in: [String!]

  """
  All values less than the given value.
  """
  universityYear_lt: String

  """
  All values less than or equal the given value.
  """
  universityYear_lte: String

  """
  All values greater than the given value.
  """
  universityYear_gt: String

  """
  All values greater than or equal the given value.
  """
  universityYear_gte: String

  """
  All values containing the given string.
  """
  universityYear_contains: String

  """
  All values not containing the given string.
  """
  universityYear_not_contains: String

  """
  All values starting with the given string.
  """
  universityYear_starts_with: String

  """
  All values not starting with the given string.
  """
  universityYear_not_starts_with: String

  """
  All values ending with the given string.
  """
  universityYear_ends_with: String

  """
  All values not ending with the given string.
  """
  universityYear_not_ends_with: String
  universityDept: String

  """
  All values that are not equal to given value.
  """
  universityDept_not: String

  """
  All values that are contained in given list.
  """
  universityDept_in: [String!]

  """
  All values that are not contained in given list.
  """
  universityDept_not_in: [String!]

  """
  All values less than the given value.
  """
  universityDept_lt: String

  """
  All values less than or equal the given value.
  """
  universityDept_lte: String

  """
  All values greater than the given value.
  """
  universityDept_gt: String

  """
  All values greater than or equal the given value.
  """
  universityDept_gte: String

  """
  All values containing the given string.
  """
  universityDept_contains: String

  """
  All values not containing the given string.
  """
  universityDept_not_contains: String

  """
  All values starting with the given string.
  """
  universityDept_starts_with: String

  """
  All values not starting with the given string.
  """
  universityDept_not_starts_with: String

  """
  All values ending with the given string.
  """
  universityDept_ends_with: String

  """
  All values not ending with the given string.
  """
  universityDept_not_ends_with: String
  gpa: Float

  """
  All values that are not equal to given value.
  """
  gpa_not: Float

  """
  All values that are contained in given list.
  """
  gpa_in: [Float!]

  """
  All values that are not contained in given list.
  """
  gpa_not_in: [Float!]

  """
  All values less than the given value.
  """
  gpa_lt: Float

  """
  All values less than or equal the given value.
  """
  gpa_lte: Float

  """
  All values greater than the given value.
  """
  gpa_gt: Float

  """
  All values greater than or equal the given value.
  """
  gpa_gte: Float
  cv: String

  """
  All values that are not equal to given value.
  """
  cv_not: String

  """
  All values that are contained in given list.
  """
  cv_in: [String!]

  """
  All values that are not contained in given list.
  """
  cv_not_in: [String!]

  """
  All values less than the given value.
  """
  cv_lt: String

  """
  All values less than or equal the given value.
  """
  cv_lte: String

  """
  All values greater than the given value.
  """
  cv_gt: String

  """
  All values greater than or equal the given value.
  """
  cv_gte: String

  """
  All values containing the given string.
  """
  cv_contains: String

  """
  All values not containing the given string.
  """
  cv_not_contains: String

  """
  All values starting with the given string.
  """
  cv_starts_with: String

  """
  All values not starting with the given string.
  """
  cv_not_starts_with: String

  """
  All values ending with the given string.
  """
  cv_ends_with: String

  """
  All values not ending with the given string.
  """
  cv_not_ends_with: String
  cvAnon: String

  """
  All values that are not equal to given value.
  """
  cvAnon_not: String

  """
  All values that are contained in given list.
  """
  cvAnon_in: [String!]

  """
  All values that are not contained in given list.
  """
  cvAnon_not_in: [String!]

  """
  All values less than the given value.
  """
  cvAnon_lt: String

  """
  All values less than or equal the given value.
  """
  cvAnon_lte: String

  """
  All values greater than the given value.
  """
  cvAnon_gt: String

  """
  All values greater than or equal the given value.
  """
  cvAnon_gte: String

  """
  All values containing the given string.
  """
  cvAnon_contains: String

  """
  All values not containing the given string.
  """
  cvAnon_not_contains: String

  """
  All values starting with the given string.
  """
  cvAnon_starts_with: String

  """
  All values not starting with the given string.
  """
  cvAnon_not_starts_with: String

  """
  All values ending with the given string.
  """
  cvAnon_ends_with: String

  """
  All values not ending with the given string.
  """
  cvAnon_not_ends_with: String
  transcript: String

  """
  All values that are not equal to given value.
  """
  transcript_not: String

  """
  All values that are contained in given list.
  """
  transcript_in: [String!]

  """
  All values that are not contained in given list.
  """
  transcript_not_in: [String!]

  """
  All values less than the given value.
  """
  transcript_lt: String

  """
  All values less than or equal the given value.
  """
  transcript_lte: String

  """
  All values greater than the given value.
  """
  transcript_gt: String

  """
  All values greater than or equal the given value.
  """
  transcript_gte: String

  """
  All values containing the given string.
  """
  transcript_contains: String

  """
  All values not containing the given string.
  """
  transcript_not_contains: String

  """
  All values starting with the given string.
  """
  transcript_starts_with: String

  """
  All values not starting with the given string.
  """
  transcript_not_starts_with: String

  """
  All values ending with the given string.
  """
  transcript_ends_with: String

  """
  All values not ending with the given string.
  """
  transcript_not_ends_with: String
  transcriptAnon: String

  """
  All values that are not equal to given value.
  """
  transcriptAnon_not: String

  """
  All values that are contained in given list.
  """
  transcriptAnon_in: [String!]

  """
  All values that are not contained in given list.
  """
  transcriptAnon_not_in: [String!]

  """
  All values less than the given value.
  """
  transcriptAnon_lt: String

  """
  All values less than or equal the given value.
  """
  transcriptAnon_lte: String

  """
  All values greater than the given value.
  """
  transcriptAnon_gt: String

  """
  All values greater than or equal the given value.
  """
  transcriptAnon_gte: String

  """
  All values containing the given string.
  """
  transcriptAnon_contains: String

  """
  All values not containing the given string.
  """
  transcriptAnon_not_contains: String

  """
  All values starting with the given string.
  """
  transcriptAnon_starts_with: String

  """
  All values not starting with the given string.
  """
  transcriptAnon_not_starts_with: String

  """
  All values ending with the given string.
  """
  transcriptAnon_ends_with: String

  """
  All values not ending with the given string.
  """
  transcriptAnon_not_ends_with: String
  internshipCountry: String

  """
  All values that are not equal to given value.
  """
  internshipCountry_not: String

  """
  All values that are contained in given list.
  """
  internshipCountry_in: [String!]

  """
  All values that are not contained in given list.
  """
  internshipCountry_not_in: [String!]

  """
  All values less than the given value.
  """
  internshipCountry_lt: String

  """
  All values less than or equal the given value.
  """
  internshipCountry_lte: String

  """
  All values greater than the given value.
  """
  internshipCountry_gt: String

  """
  All values greater than or equal the given value.
  """
  internshipCountry_gte: String

  """
  All values containing the given string.
  """
  internshipCountry_contains: String

  """
  All values not containing the given string.
  """
  internshipCountry_not_contains: String

  """
  All values starting with the given string.
  """
  internshipCountry_starts_with: String

  """
  All values not starting with the given string.
  """
  internshipCountry_not_starts_with: String

  """
  All values ending with the given string.
  """
  internshipCountry_ends_with: String

  """
  All values not ending with the given string.
  """
  internshipCountry_not_ends_with: String
  internshipType: String

  """
  All values that are not equal to given value.
  """
  internshipType_not: String

  """
  All values that are contained in given list.
  """
  internshipType_in: [String!]

  """
  All values that are not contained in given list.
  """
  internshipType_not_in: [String!]

  """
  All values less than the given value.
  """
  internshipType_lt: String

  """
  All values less than or equal the given value.
  """
  internshipType_lte: String

  """
  All values greater than the given value.
  """
  internshipType_gt: String

  """
  All values greater than or equal the given value.
  """
  internshipType_gte: String

  """
  All values containing the given string.
  """
  internshipType_contains: String

  """
  All values not containing the given string.
  """
  internshipType_not_contains: String

  """
  All values starting with the given string.
  """
  internshipType_starts_with: String

  """
  All values not starting with the given string.
  """
  internshipType_not_starts_with: String

  """
  All values ending with the given string.
  """
  internshipType_ends_with: String

  """
  All values not ending with the given string.
  """
  internshipType_not_ends_with: String
  companyName: String

  """
  All values that are not equal to given value.
  """
  companyName_not: String

  """
  All values that are contained in given list.
  """
  companyName_in: [String!]

  """
  All values that are not contained in given list.
  """
  companyName_not_in: [String!]

  """
  All values less than the given value.
  """
  companyName_lt: String

  """
  All values less than or equal the given value.
  """
  companyName_lte: String

  """
  All values greater than the given value.
  """
  companyName_gt: String

  """
  All values greater than or equal the given value.
  """
  companyName_gte: String

  """
  All values containing the given string.
  """
  companyName_contains: String

  """
  All values not containing the given string.
  """
  companyName_not_contains: String

  """
  All values starting with the given string.
  """
  companyName_starts_with: String

  """
  All values not starting with the given string.
  """
  companyName_not_starts_with: String

  """
  All values ending with the given string.
  """
  companyName_ends_with: String

  """
  All values not ending with the given string.
  """
  companyName_not_ends_with: String
  internshipPeriod: String

  """
  All values that are not equal to given value.
  """
  internshipPeriod_not: String

  """
  All values that are contained in given list.
  """
  internshipPeriod_in: [String!]

  """
  All values that are not contained in given list.
  """
  internshipPeriod_not_in: [String!]

  """
  All values less than the given value.
  """
  internshipPeriod_lt: String

  """
  All values less than or equal the given value.
  """
  internshipPeriod_lte: String

  """
  All values greater than the given value.
  """
  internshipPeriod_gt: String

  """
  All values greater than or equal the given value.
  """
  internshipPeriod_gte: String

  """
  All values containing the given string.
  """
  internshipPeriod_contains: String

  """
  All values not containing the given string.
  """
  internshipPeriod_not_contains: String

  """
  All values starting with the given string.
  """
  internshipPeriod_starts_with: String

  """
  All values not starting with the given string.
  """
  internshipPeriod_not_starts_with: String

  """
  All values ending with the given string.
  """
  internshipPeriod_ends_with: String

  """
  All values not ending with the given string.
  """
  internshipPeriod_not_ends_with: String
  internshipPosition: String

  """
  All values that are not equal to given value.
  """
  internshipPosition_not: String

  """
  All values that are contained in given list.
  """
  internshipPosition_in: [String!]

  """
  All values that are not contained in given list.
  """
  internshipPosition_not_in: [String!]

  """
  All values less than the given value.
  """
  internshipPosition_lt: String

  """
  All values less than or equal the given value.
  """
  internshipPosition_lte: String

  """
  All values greater than the given value.
  """
  internshipPosition_gt: String

  """
  All values greater than or equal the given value.
  """
  internshipPosition_gte: String

  """
  All values containing the given string.
  """
  internshipPosition_contains: String

  """
  All values not containing the given string.
  """
  internshipPosition_not_contains: String

  """
  All values starting with the given string.
  """
  internshipPosition_starts_with: String

  """
  All values not starting with the given string.
  """
  internshipPosition_not_starts_with: String

  """
  All values ending with the given string.
  """
  internshipPosition_ends_with: String

  """
  All values not ending with the given string.
  """
  internshipPosition_not_ends_with: String
  acceptanceLetter: String

  """
  All values that are not equal to given value.
  """
  acceptanceLetter_not: String

  """
  All values that are contained in given list.
  """
  acceptanceLetter_in: [String!]

  """
  All values that are not contained in given list.
  """
  acceptanceLetter_not_in: [String!]

  """
  All values less than the given value.
  """
  acceptanceLetter_lt: String

  """
  All values less than or equal the given value.
  """
  acceptanceLetter_lte: String

  """
  All values greater than the given value.
  """
  acceptanceLetter_gt: String

  """
  All values greater than or equal the given value.
  """
  acceptanceLetter_gte: String

  """
  All values containing the given string.
  """
  acceptanceLetter_contains: String

  """
  All values not containing the given string.
  """
  acceptanceLetter_not_contains: String

  """
  All values starting with the given string.
  """
  acceptanceLetter_starts_with: String

  """
  All values not starting with the given string.
  """
  acceptanceLetter_not_starts_with: String

  """
  All values ending with the given string.
  """
  acceptanceLetter_ends_with: String

  """
  All values not ending with the given string.
  """
  acceptanceLetter_not_ends_with: String
  acceptanceEmail: String

  """
  All values that are not equal to given value.
  """
  acceptanceEmail_not: String

  """
  All values that are contained in given list.
  """
  acceptanceEmail_in: [String!]

  """
  All values that are not contained in given list.
  """
  acceptanceEmail_not_in: [String!]

  """
  All values less than the given value.
  """
  acceptanceEmail_lt: String

  """
  All values less than or equal the given value.
  """
  acceptanceEmail_lte: String

  """
  All values greater than the given value.
  """
  acceptanceEmail_gt: String

  """
  All values greater than or equal the given value.
  """
  acceptanceEmail_gte: String

  """
  All values containing the given string.
  """
  acceptanceEmail_contains: String

  """
  All values not containing the given string.
  """
  acceptanceEmail_not_contains: String

  """
  All values starting with the given string.
  """
  acceptanceEmail_starts_with: String

  """
  All values not starting with the given string.
  """
  acceptanceEmail_not_starts_with: String

  """
  All values ending with the given string.
  """
  acceptanceEmail_ends_with: String

  """
  All values not ending with the given string.
  """
  acceptanceEmail_not_ends_with: String
  economicSupport: String

  """
  All values that are not equal to given value.
  """
  economicSupport_not: String

  """
  All values that are contained in given list.
  """
  economicSupport_in: [String!]

  """
  All values that are not contained in given list.
  """
  economicSupport_not_in: [String!]

  """
  All values less than the given value.
  """
  economicSupport_lt: String

  """
  All values less than or equal the given value.
  """
  economicSupport_lte: String

  """
  All values greater than the given value.
  """
  economicSupport_gt: String

  """
  All values greater than or equal the given value.
  """
  economicSupport_gte: String

  """
  All values containing the given string.
  """
  economicSupport_contains: String

  """
  All values not containing the given string.
  """
  economicSupport_not_contains: String

  """
  All values starting with the given string.
  """
  economicSupport_starts_with: String

  """
  All values not starting with the given string.
  """
  economicSupport_not_starts_with: String

  """
  All values ending with the given string.
  """
  economicSupport_ends_with: String

  """
  All values not ending with the given string.
  """
  economicSupport_not_ends_with: String
  longQuestion1: String

  """
  All values that are not equal to given value.
  """
  longQuestion1_not: String

  """
  All values that are contained in given list.
  """
  longQuestion1_in: [String!]

  """
  All values that are not contained in given list.
  """
  longQuestion1_not_in: [String!]

  """
  All values less than the given value.
  """
  longQuestion1_lt: String

  """
  All values less than or equal the given value.
  """
  longQuestion1_lte: String

  """
  All values greater than the given value.
  """
  longQuestion1_gt: String

  """
  All values greater than or equal the given value.
  """
  longQuestion1_gte: String

  """
  All values containing the given string.
  """
  longQuestion1_contains: String

  """
  All values not containing the given string.
  """
  longQuestion1_not_contains: String

  """
  All values starting with the given string.
  """
  longQuestion1_starts_with: String

  """
  All values not starting with the given string.
  """
  longQuestion1_not_starts_with: String

  """
  All values ending with the given string.
  """
  longQuestion1_ends_with: String

  """
  All values not ending with the given string.
  """
  longQuestion1_not_ends_with: String
  longQuestion2: String

  """
  All values that are not equal to given value.
  """
  longQuestion2_not: String

  """
  All values that are contained in given list.
  """
  longQuestion2_in: [String!]

  """
  All values that are not contained in given list.
  """
  longQuestion2_not_in: [String!]

  """
  All values less than the given value.
  """
  longQuestion2_lt: String

  """
  All values less than or equal the given value.
  """
  longQuestion2_lte: String

  """
  All values greater than the given value.
  """
  longQuestion2_gt: String

  """
  All values greater than or equal the given value.
  """
  longQuestion2_gte: String

  """
  All values containing the given string.
  """
  longQuestion2_contains: String

  """
  All values not containing the given string.
  """
  longQuestion2_not_contains: String

  """
  All values starting with the given string.
  """
  longQuestion2_starts_with: String

  """
  All values not starting with the given string.
  """
  longQuestion2_not_starts_with: String

  """
  All values ending with the given string.
  """
  longQuestion2_ends_with: String

  """
  All values not ending with the given string.
  """
  longQuestion2_not_ends_with: String
  longQuestion3: String

  """
  All values that are not equal to given value.
  """
  longQuestion3_not: String

  """
  All values that are contained in given list.
  """
  longQuestion3_in: [String!]

  """
  All values that are not contained in given list.
  """
  longQuestion3_not_in: [String!]

  """
  All values less than the given value.
  """
  longQuestion3_lt: String

  """
  All values less than or equal the given value.
  """
  longQuestion3_lte: String

  """
  All values greater than the given value.
  """
  longQuestion3_gt: String

  """
  All values greater than or equal the given value.
  """
  longQuestion3_gte: String

  """
  All values containing the given string.
  """
  longQuestion3_contains: String

  """
  All values not containing the given string.
  """
  longQuestion3_not_contains: String

  """
  All values starting with the given string.
  """
  longQuestion3_starts_with: String

  """
  All values not starting with the given string.
  """
  longQuestion3_not_starts_with: String

  """
  All values ending with the given string.
  """
  longQuestion3_ends_with: String

  """
  All values not ending with the given string.
  """
  longQuestion3_not_ends_with: String
  ourPrograms: String

  """
  All values that are not equal to given value.
  """
  ourPrograms_not: String

  """
  All values that are contained in given list.
  """
  ourPrograms_in: [String!]

  """
  All values that are not contained in given list.
  """
  ourPrograms_not_in: [String!]

  """
  All values less than the given value.
  """
  ourPrograms_lt: String

  """
  All values less than or equal the given value.
  """
  ourPrograms_lte: String

  """
  All values greater than the given value.
  """
  ourPrograms_gt: String

  """
  All values greater than or equal the given value.
  """
  ourPrograms_gte: String

  """
  All values containing the given string.
  """
  ourPrograms_contains: String

  """
  All values not containing the given string.
  """
  ourPrograms_not_contains: String

  """
  All values starting with the given string.
  """
  ourPrograms_starts_with: String

  """
  All values not starting with the given string.
  """
  ourPrograms_not_starts_with: String

  """
  All values ending with the given string.
  """
  ourPrograms_ends_with: String

  """
  All values not ending with the given string.
  """
  ourPrograms_not_ends_with: String
  aboutUs: String

  """
  All values that are not equal to given value.
  """
  aboutUs_not: String

  """
  All values that are contained in given list.
  """
  aboutUs_in: [String!]

  """
  All values that are not contained in given list.
  """
  aboutUs_not_in: [String!]

  """
  All values less than the given value.
  """
  aboutUs_lt: String

  """
  All values less than or equal the given value.
  """
  aboutUs_lte: String

  """
  All values greater than the given value.
  """
  aboutUs_gt: String

  """
  All values greater than or equal the given value.
  """
  aboutUs_gte: String

  """
  All values containing the given string.
  """
  aboutUs_contains: String

  """
  All values not containing the given string.
  """
  aboutUs_not_contains: String

  """
  All values starting with the given string.
  """
  aboutUs_starts_with: String

  """
  All values not starting with the given string.
  """
  aboutUs_not_starts_with: String

  """
  All values ending with the given string.
  """
  aboutUs_ends_with: String

  """
  All values not ending with the given string.
  """
  aboutUs_not_ends_with: String
  invalid: Boolean

  """
  All values that are not equal to given value.
  """
  invalid_not: Boolean
  formEditToken: String

  """
  All values that are not equal to given value.
  """
  formEditToken_not: String

  """
  All values that are contained in given list.
  """
  formEditToken_in: [String!]

  """
  All values that are not contained in given list.
  """
  formEditToken_not_in: [String!]

  """
  All values less than the given value.
  """
  formEditToken_lt: String

  """
  All values less than or equal the given value.
  """
  formEditToken_lte: String

  """
  All values greater than the given value.
  """
  formEditToken_gt: String

  """
  All values greater than or equal the given value.
  """
  formEditToken_gte: String

  """
  All values containing the given string.
  """
  formEditToken_contains: String

  """
  All values not containing the given string.
  """
  formEditToken_not_contains: String

  """
  All values starting with the given string.
  """
  formEditToken_starts_with: String

  """
  All values not starting with the given string.
  """
  formEditToken_not_starts_with: String

  """
  All values ending with the given string.
  """
  formEditToken_ends_with: String

  """
  All values not ending with the given string.
  """
  formEditToken_not_ends_with: String
  formEditTokenExpiry: Float

  """
  All values that are not equal to given value.
  """
  formEditTokenExpiry_not: Float

  """
  All values that are contained in given list.
  """
  formEditTokenExpiry_in: [Float!]

  """
  All values that are not contained in given list.
  """
  formEditTokenExpiry_not_in: [Float!]

  """
  All values less than the given value.
  """
  formEditTokenExpiry_lt: Float

  """
  All values less than or equal the given value.
  """
  formEditTokenExpiry_lte: Float

  """
  All values greater than the given value.
  """
  formEditTokenExpiry_gt: Float

  """
  All values greater than or equal the given value.
  """
  formEditTokenExpiry_gte: Float
  notes: String

  """
  All values that are not equal to given value.
  """
  notes_not: String

  """
  All values that are contained in given list.
  """
  notes_in: [String!]

  """
  All values that are not contained in given list.
  """
  notes_not_in: [String!]

  """
  All values less than the given value.
  """
  notes_lt: String

  """
  All values less than or equal the given value.
  """
  notes_lte: String

  """
  All values greater than the given value.
  """
  notes_gt: String

  """
  All values greater than or equal the given value.
  """
  notes_gte: String

  """
  All values containing the given string.
  """
  notes_contains: String

  """
  All values not containing the given string.
  """
  notes_not_contains: String

  """
  All values starting with the given string.
  """
  notes_starts_with: String

  """
  All values not starting with the given string.
  """
  notes_not_starts_with: String

  """
  All values ending with the given string.
  """
  notes_ends_with: String

  """
  All values not ending with the given string.
  """
  notes_not_ends_with: String
}

input InitialFormWhereUniqueInput {
  id: ID
  email: String
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createFormGrade(data: FormGradeCreateInput!): FormGrade!
  createInitialForm(data: InitialFormCreateInput!): InitialForm!
  createUser(data: UserCreateInput!): User!
  updateFormGrade(
    data: FormGradeUpdateInput!
    where: FormGradeWhereUniqueInput!
  ): FormGrade
  updateInitialForm(
    data: InitialFormUpdateInput!
    where: InitialFormWhereUniqueInput!
  ): InitialForm
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  deleteFormGrade(where: FormGradeWhereUniqueInput!): FormGrade
  deleteInitialForm(where: InitialFormWhereUniqueInput!): InitialForm
  deleteUser(where: UserWhereUniqueInput!): User
  upsertFormGrade(
    where: FormGradeWhereUniqueInput!
    create: FormGradeCreateInput!
    update: FormGradeUpdateInput!
  ): FormGrade!
  upsertInitialForm(
    where: InitialFormWhereUniqueInput!
    create: InitialFormCreateInput!
    update: InitialFormUpdateInput!
  ): InitialForm!
  upsertUser(
    where: UserWhereUniqueInput!
    create: UserCreateInput!
    update: UserUpdateInput!
  ): User!
  updateManyFormGrades(
    data: FormGradeUpdateManyMutationInput!
    where: FormGradeWhereInput
  ): BatchPayload!
  updateManyInitialForms(
    data: InitialFormUpdateManyMutationInput!
    where: InitialFormWhereInput
  ): BatchPayload!
  updateManyUsers(
    data: UserUpdateManyMutationInput!
    where: UserWhereInput
  ): BatchPayload!
  deleteManyFormGrades(where: FormGradeWhereInput): BatchPayload!
  deleteManyInitialForms(where: InitialFormWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String

  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

enum Permission {
  ADMIN
  JURY
  RESULTS
}

type Query {
  formGrades(
    where: FormGradeWhereInput
    orderBy: FormGradeOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [FormGrade]!
  initialForms(
    where: InitialFormWhereInput
    orderBy: InitialFormOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [InitialForm]!
  users(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [User]!
  formGrade(where: FormGradeWhereUniqueInput!): FormGrade
  initialForm(where: InitialFormWhereUniqueInput!): InitialForm
  user(where: UserWhereUniqueInput!): User
  formGradesConnection(
    where: FormGradeWhereInput
    orderBy: FormGradeOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): FormGradeConnection!
  initialFormsConnection(
    where: InitialFormWhereInput
    orderBy: InitialFormOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): InitialFormConnection!
  usersConnection(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): UserConnection!

  """
  Fetches an object given its ID
  """
  node(
    """
    The ID of an object
    """
    id: ID!
  ): Node
}

type Subscription {
  formGrade(
    where: FormGradeSubscriptionWhereInput
  ): FormGradeSubscriptionPayload
  initialForm(
    where: InitialFormSubscriptionWhereInput
  ): InitialFormSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type User implements Node {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
}

"""
A connection to a list of items.
"""
type UserConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  name: String!
  email: String!
  permissions: UserCreatepermissionsInput
}

input UserCreateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

input UserCreatepermissionsInput {
  set: [Permission!]
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  The item at the end of the edge.
  """
  node: User!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [UserSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateDataInput {
  name: String
  email: String
  permissions: UserUpdatepermissionsInput
}

input UserUpdateInput {
  name: String
  email: String
  permissions: UserUpdatepermissionsInput
}

input UserUpdateManyMutationInput {
  name: String
  email: String
  permissions: UserUpdatepermissionsInput
}

input UserUpdateOneRequiredInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
}

input UserUpdatepermissionsInput {
  set: [Permission!]
}

input UserUpsertNestedInput {
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [UserWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values less than the given value.
  """
  name_lt: String

  """
  All values less than or equal the given value.
  """
  name_lte: String

  """
  All values greater than the given value.
  """
  name_gt: String

  """
  All values greater than or equal the given value.
  """
  name_gte: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  email: String

  """
  All values that are not equal to given value.
  """
  email_not: String

  """
  All values that are contained in given list.
  """
  email_in: [String!]

  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]

  """
  All values less than the given value.
  """
  email_lt: String

  """
  All values less than or equal the given value.
  """
  email_lte: String

  """
  All values greater than the given value.
  """
  email_gt: String

  """
  All values greater than or equal the given value.
  """
  email_gte: String

  """
  All values containing the given string.
  """
  email_contains: String

  """
  All values not containing the given string.
  """
  email_not_contains: String

  """
  All values starting with the given string.
  """
  email_starts_with: String

  """
  All values not starting with the given string.
  """
  email_not_starts_with: String

  """
  All values ending with the given string.
  """
  email_ends_with: String

  """
  All values not ending with the given string.
  """
  email_not_ends_with: String
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
